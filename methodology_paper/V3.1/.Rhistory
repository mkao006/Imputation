test = foo("wheatSUA.csv")
traceback()
test = foo("wheatSUA.csv")
test = foo("wheatSUA.csv")
str(test)
unique(test$areaCode)
test = foo("wheatSUA.csv")
test[, productionSymb]
str(test)
test[, "productionSymb"]
test = read.csv(file = "wheatSUA.csv", stringsAsFactors = FALSE)
test[, productionSymb]
str(test)
test = data.table(test)
test[, productionSymb]
test = foo("wheatSUA.csv")
str(tmp2)
containInfo
str(tmp3)
str(tmp4)
any(is.na(tmp$areaCode))
any(is.na(tmp$areaName))
any(is.na(tmp2$areaName))
str(tmp2)
removeNoInfo
removeNoInfo
data
?quote
?parse
?get
tmp3
dim(tmp3)
test = foo("wheatSUA.csv")
str(test)
str(test)
test = foo("wheatSUA.csv")
flag2weight
library(faoswsFlag)
flag2weight
?detach
detach(faoswsFlag)
detach("faoswsFlag")
detach("package:faoswsFlag")
flag2weight
library(faoswsFlag)
flag2weight
flag2weight
test = foo("wheatSUA.csv")
library(knitr)
knit("methodology.Rnw")
knit("methodology.Rnw")
wheat.dt = foo("wheatSUA.csv")
knit("methodology.Rnw")
knit("methodology.Rnw")
library(help = faoswsProductionImputation)
args(imputeproductionDomain)
colnames(wheat.dt)
library(help = faoswsFlag)
wheat.dt[, yieldSymb := aggregateObservationStatusFlag(productionSymb, areaHarvestedSymb)]
aggregateObservationStatusFlag
aggregateObservationStatusFlag(c("M", "E", "F"), c(" ", "*", "T"))
aggregateObservationStatusFlag(c("M", "E", "F"), c(" ", "*", "T"))
aggregateObservationStatusFlag(c("M", "E", "F"), c(" ", "*", "T"))
aggregateObservationStatusFlag(c("M", "E", "F"), c(" ", "*", "T"))
test = list(c("M", "E", "F"), c(" ", "*", "T"))
test
flag2weight(test[[1]])
flag2weight(c("M", "E"))
flag2weight
rm(FUN)
flagTable
flagTable$flagObservationStatus
flag2weight(c("M", "E"))
flag2weight(flagObservationStatus = c("M", "E"))
flag2weight
aggregateObservationStatusFlag(c("M", "E", "F"), c(" ", "*", "T"))
flag2weight(flagObservationStatus = c("M", "E"))
flag2weight(flagObservationStatus = c("M", "E"))
flagTable
class(flagTable)
colnames(flagTable)[2] = "test"
flag2weight(flagObservationStatus = c("M", "E"))
flag2weight(flagObservationStatus = c("M", "E"))
flag2weight(flagObservationStatus = c("M", "E"))
flag2weight(flagObservationStatus = c("M", "E"))
flag2weight(flagObservationStatus = c("M", "E"))
colnames(flagTable)[2] = "flagObservationWeights"
colnames(flagTable)[2] = "flagObservationWeights"
flag2weight(flagObservationStatus = c("M", "E"))
aggregateObservationStatusFlag(c("M", "E", "F"), c(" ", "*", "T"))
unique(wheat.dt$productionSymb)
unique(wheat.dt$areaHarvestedSymb)
flagTable
oldFlagTable
str(wheat.dt)
unique(wheat.dt$productionSymb)
unique(wheat.dt$productionSymb) %in% oldFlagTable
unique(wheat.dt$productionSymb) %in% oldFlagTable$flagObservationStatus
wheat.dt
str(wheat.dt)
imputeproductionDomain
flag2weight
flag2weight
test.dt
test.dt
is.atomic
is.atomic
?is.atomic
ls()
str(check)
data
str(wheat.dt)
unique(wheat.dt[, list(productionValue, productionWeight)])
unique(wheat.dt[, list(productionSymb, productionWeight)])
unique(wheat.dt[, list(productionObservationStatusFlag, productionWeight)])
unique(wheat.dt[, list(productionObservationFlag, productionWeight)])
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
imputeYield
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
)
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
all.vars(yieldVar^0.5 ~ -1 + (1 + bs(year, degree = 1, df = 3)|areaName))
yieldVar^0.5 ~ -1 + (1 + bs(year, degree = 1, df = 3)|areaName)
test = yieldVar^0.5 ~ -1 + (1 + bs(year, degree = 1, df = 3)|areaName)
all.vars(test)[1]
all.vars(test)[1] = "yieldValue"
update(test, yieldValue ~. )
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
any(is.na(wheat.dt$productionValue))
which(is.na(wheat.dt$productionValue))
wheat.dt[, which(is.na(productionValue))]
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
imputeProduction
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
wheat.dt = foo("wheatSUA.csv")
colnames(wheat.dt)
wheat.dt = foo("wheatSUA.csv")
colnames(wheat.dt)
wheat.dt = foo("wheatSUA.csv")
str(wheat.dt)
copy
knit("methodology.Rnw")
library(knitr(
library(knitr)
library(knitr(
knit("methodology.Rnw")
imputeYield
xyplot(yieldValue ~ year|araName, data =test, type = c("g", "l"))
xyplot(yieldValue ~ year|areaName, data =test, type = c("g", "l"))
wheat.dt = foo("wheatSUA.csv")
wheat.dt[, impute1 := yieldValue]; wheat.dt[, impute1 := imputeYield(impute1 ~ -1 + (1 + bs(year, degree = 1, df = 3)|areaName))]
wheat.dt[, impute1 := yieldValue]; wheat.dt[, impute1 := imputeYield(impute1 ~ -1 + (1 + bs(year, degree = 1, df = 3)|areaName), data = .SD, weights = NULL, index = "areaName")]
imputeYield
wheat.dt
wheat.dt[, impute
wheat.dt[, impute1 := yieldValue]; imputeYield(impute1 ~ -1 + 
                       (1 + bs(year, degree = 1, df = 3)|areaName))
wheat.dt[, impute1 := yieldValue]; imputeYield(impute1 ~ -1 + 
                       (1 + bs(year, degree = 1, df = 3)|areaName), data = wheat.dt, weights = NULL, index = "areaName")
wheat.dt[, impute2 := yieldValue]; imputeYield(impute2^0.5 ~ -1 + 
                       (1 + bs(year, degree = 1, df = 3)|areaName), data = wheat.dt, weights = NULL, index = "areaName")
str(wheat.dt
)
xyplot(impute1 + impute2 ~ year|areaName, data= wheat.dt, type = c("g", "l"))
xyplot(impute1 + impute2 ~ year|areaName, data= wheat.dt, type = c("g", "l"), auto.key = TRUE)
str(test)
xyplot(yieldValue ~ year|areaName, data = test)
lm
?lm
yjPower
library(car)
yjPower
imputeYield
imputeProduction
imputeYield
imputProduction
imputeProduction
imputeYield
library(lme4)
str(beef.dt)
beef.dt = foo("beefSUA.csv")
beef.dt = foo("beefSUA.csv")
str(beef.dt)
beef.dt = foo("beefSUA.csv")
testFit
1/(sqrt)
1/(sqrt(5))
sqrt(5)^2
str(wheat.dt)
str(test)
str(wheat.dt[is.na(productionValue), ])
str(test[is.na(productionValue), ])
beef.dt = foo("beefSUA.csv")
beef.dt = foo("beefSUA.csv")
str(beef.dt)
beef.dt = foo("beefSUA.csv")
str(beef.dt)
imputeYield
hist(rnorm(1000)^2)
?spline
all.vars
test = yieldValue^2 ~ year
all.vars(teset)[1]
all.vars(test)[1]
all.vars(test)
?all.vars
all.names(expression(x+y))
all.names(expression(x~y))
?all.vars
all.names(expression(x^2~y))
all.names(expression(sqrt(x)~y))
detach(package:faoswsFlag)
library(faoswsFlag)
library(help = faoswsFlag)
library(help = faoswsFlag)
library(faoswsFlag)
aggregateObservationFlag
library(help = faoswsFlag)
library(knitr(
library(knitr)
knit("methodology.Rnw")
library(knitr)
knit("methodology.Rnw")
ls()
knit("methodology.Rnw")
knit("methodology.Rnw")
knit("methodology.Rnw")
imputeProductionDomain
library(knitr)
knit("methodology.Rnw")
str(wheatImputed.dt)
wheat.dt = read.example(file = "wheatSUA.csv")
str(wheatImpute.dt)
str(wheatImputed.dt)
colnames(wheat.dt)
wheat.dt[!is.na(productionValue), 
         productionImputedValue]
wheat.dt[!is.na(productionValue), 
         productionImputedValue]
wheat.dt[, areaHarvestdImputedValue]
any(is.na(wheat.dt$productionImputedValue))
wheat.dt = read.example("wheatSUA.csv")
str(wheat.dt)
wheat.dt[is.na(productionValue), productionImputedValue]
wheat.dt[is.na(productionValue), productionImputedValue]
wheat.dt[, areaHarvestedImputedValue]
library(forecast)
library(earth)
grape.dt = read.example("grapesSUA.csv")
beef.dt = read.example("beefSUA.csv")
wheat.dt = read.example("wheatSUA.csv")
grape.dt = read.example("grapesSUA.csv")
wheat.dt = read.example("wheatSUA.csv")
wheat.dt = read.example("wheatSUA.csv")
wheat.dt = read.example("wheatSUA.csv")
args(na.approx)
wheat.dt = read.example("wheatSUA.csv")
unique(wheat.dt$areaName)
wheat.dt = read.example("wheatSUA.csv")
wheat.dt = read.example("wheatSUA.csv")
xyplot(areaHarvestedValue + areaHarvestedImputedValue ~ year|areaName, 
       data = wheat.dt, type = c("g", "l"),
       auto.key = 
       list(text = c("Observed Area Harvested", 
                "Imputed Area Harvested")),
       ylab = "", xlab = "", 
       scales = list(y = list(relation = "free", draw = FALSE)))
xyplot(areaHarvestedValue + areaHarvestedImputedValue ~ year|areaName, 
       data = wheat.dt, type = c("g", "l"),
       auto.key = 
       list(text = c("Observed Area Harvested", 
                "Imputed Area Harvested")),
       ylab = "", xlab = "", 
       scales = list(y = list(relation = "free", draw = FALSE)))
wheat.dt[areaName == "Nigeria", areaHarvestedValue]
wheat.dt = read.example("wheatSUA.csv")
xyplot(areaHarvestedValue + areaHarvestedImputedValue ~ year|areaName, 
       data = wheat.dt, type = c("g", "l"),
       auto.key = 
       list(text = c("Observed Area Harvested", 
                "Imputed Area Harvested")),
       ylab = "", xlab = "", 
       scales = list(y = list(relation = "free", draw = FALSE)))
xyplot(areaHarvestedValue + areaHarvestedImputedValue ~ year|areaName, 
       data = wheat.dt, type = c("g", "l"),
       auto.key = 
       list(text = c("Observed Area Harvested", 
                "Imputed Area Harvested")),
       ylab = "", xlab = "", 
       scales = list(y = list(relation = "free", draw = FALSE)))
wheat.dt = read.example("wheatSUA.csv")
xyplot(areaHarvestedValue + areaHarvestedImputedValue ~ year|areaName, 
       data = wheat.dt, type = c("g", "l"),
       auto.key = 
       list(text = c("Observed Area Harvested", 
                "Imputed Area Harvested")),
       ylab = "", xlab = "", 
       scales = list(y = list(relation = "free", draw = FALSE)))
wheat.dt[areaName == "Madagascar", ]
wheat.dt = read.example("wheatSUA.csv")
wheat.dt[areaName == "Belgium-Luxembourg", 
                        areaHarvestedImputedValue]
wheat.dt = read.example("wheatSUA.csv")
warnings()
warnings()
traceback()
max(NA)
max(NA, na.rm = TRUE)
wheat.dt[areaName == "Rwanda", yieldImputedValue]
wheat.dt[areaName == "Rwanda", productionValue]
wheat.dt[areaName == "Rwanda", areaHarvestedValue]
wheat.dt = read.example("wheatSUA.csv")
ensembleImpute
rm(ensembleImpute)
wheat.dt[areaName == "Rwanda", ]
wheat.dt[areaName == "Rwanda", list(productionValue, areaHarvestedValue, yieldValue)]
wheat.dt[areaName == "Rwanda", list(productionValue, areaHarvestedValue, yieldValue, yieldImputedValue)]
wheat.dt[areaName == "Rwanda", list(productionValue, areaHarvestedValue, yieldValue, areaHarvestedImputedValue)]
wheat.dt = read.example("wheatSUA.csv")
foo
wheat.dt = read.example("wheatSUA.csv")
ensembleImpute
wheat.dt = read.example("wheatSUA.csv")
beef.dt = read.example("beefSUA.csv")
beef.dt = read.example("beefSUA.csv")
any(is.na(beef.dt$areaHarvestedValue))
beef.dt = read.example("beefSUA.csv")
unique(beef.dt$areaName)
beef.dt[areaName == "the West Bank", ]
dev.off()
dev.off()
library(knitr)
knit("methodology.Rnw")
knit("methodology.Rnw")
knit("methodology.Rnw")
knit("methodology.Rnw")
knit("methodology.Rnw")
knit("methodology.Rnw")
knit("methodology.Rnw")
library(knitr)
knit("methodology.Rnw")
library(knitr)
knit("methodology.Rnw")
unique(grape.dt$areaName)
colnames(FAOcountryProfile
)
library(FAOSTAT)
library(help = FAOSTAT)
FAOcheck
str(FAOcountryProfile)
test
library(reshape2)
test$name
sort(test$name)
library(knitr)
knit("methodology.Rnw")
grape.dt[areaName == "Viet Name", ]
grape.dt[areaName == "Viet Nam", ]
knit("methodology.Rnw")
library(forecast)
?stl
ets
?ets
wheat.dt = read.example("wheatSUA.csv")
grape = read.example("grapesSUA.csv")
grape.dt = read.example("grapesSUA.csv")
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
grape.dt[areaName == "Viet Nam", yieldImputed]
grape.dt[areaName == "Viet Nam", yieldImputedValue]
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
unique(beef.dt$areaName)
beef.dt[areaName == "Occupied Palestinian Territory", list(productionImputedValue, areaHarvestedImputedValue, yieldImputedValue)]
beef.dt = read.example("beefSUA.csv")
beef.dt[areaName == "Occupied Palestinian Territory", list(productionImputedValue, areaHarvestedImputedValue, yieldImputedValue)]
beef.dt[areaName == "Occupied Palestinian Territory", list(productionImputedValue, areaHarvestedImputedValue, yieldImputedValue)]
beef.dt[areaName == "Occupied Palestinian Territory", list(productionImputedValue, areaHarvestedImputedValue, yieldImputedValue)]
beef.dt[areaName == "Occupied Palestinian Territory", list(productionImputedValue, areaHarvestedImputedValue, yieldImputedValue)]
beef.dt[areaName == "Occupied Palestinian Territory", list(productionImputedValue, areaHarvestedImputedValue, yieldImputedValue)]
knit("methodology.Rnw")
knit("methodology.Rnw")
warnings()
xyplot(yieldValue + yieldImputedValue ~ 
       year|areaName, 
       data = grape.dt, type = c("g", "l", "p"), cex = 0.3,
       auto.key = 
       list(text = c("Observed Yield", "Imputed Yield")),
       ylab = "", xlab = "", 
       scales = list(y = list(draw = FALSE)))
knit("methodology.Rnw")
knit("methodology.Rnw")
library(knitr)
knit("methodology.Rnw")
grape.dt
grape.dt[areaName == "Viet Nam", list(productionValue, areaHarvesterValue, yieldValue)]
grape.dt[areaName == "Viet Nam", list(productionValue, areaHarvestedValue, yieldValue)]
grape.dt[areaName == "Viet Nam", list(productionImputedValue, areaHarvestedImputedValue, yieldImputedValue)]
knit("methodology.Rnw")
library(help = FAOSTAT)
knit("methodology.Rnw")
library(knitr)
knit("methodology.Rnw")
library(earth)
library(forecast)
library(knitr); knit("methodology.Rnw")
