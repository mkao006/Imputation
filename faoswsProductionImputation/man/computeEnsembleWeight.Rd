% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/computeEnsembleWeight.R
\name{computeEnsembleWeight}
\alias{computeEnsembleWeight}
\title{Function to compute the weights of the ensemble models}
\usage{
computeEnsembleWeight(x, fits, restrictWeights = TRUE, maximumWeights = 0.7,
  errorType = "mse", errorFunction = function(x) mean(x^2),
  ensembleModel = NULL, modelExtrapolationRange = rep(Inf,
  length(ensembleModel)))
}
\arguments{
\item{x}{A numeric vector to be imputed.}

\item{fits}{The fitted value from the models.}

\item{restrictWeights}{Whether a maximum weight restriction should
be imposed.}

\item{maximumWeights}{The maximum weight to be imposed, must be
between [0.5, 1].}

\item{errorType}{See ?computeErrorRate.}

\item{errorFunction}{Function taking a vector of errors and returning a
positive value.  Smaller values should indicate a better fit to the data.
The default is the mean-squared error (so f(x)=mean(x^2)), but other
functions (such as the median absolute deviation, or f(x)=median(abs(x)))
can be used.  Note: NA values will be removed prior to calling this
function.  Also, the errors are all positive, so the median absolute
deviation can also be computed with f(x)=median(x).}

\item{ensembleModel}{A list of the models fit.  This is only needed if
errorType = "loocv".}

\item{modelExtrapolationRange}{A numeric vector specifying the valid range
of extrapolation for each model.  This vector must be the same length as
ensembleModel, as it's i-th element gives the extrapolation range for the
i-th element of ensembleModel.}
}
\description{
Function to compute the weights of the ensemble models
}

