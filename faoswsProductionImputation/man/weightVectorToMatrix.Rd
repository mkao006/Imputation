% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/weightVectorToMatrix.R
\name{weightVectorToMatrix}
\alias{weightVectorToMatrix}
\title{Convert the weights vector to a matrix}
\usage{
weightVectorToMatrix(x, w, ensembleModel, modelExtrapolationRange)
}
\arguments{
\item{x}{A numeric vector to be imputed.}

\item{w}{The vector of weights, computed based on the errors of the models.}

\item{ensembleModel}{A list of the different models used to construct the
ensemble.  Each element of this list should be the function that was used
to fit the model.}

\item{modelExtrapolationRange}{A numeric vector specifying the valid range
of extrapolation for each model.  This vector must be the same length as
ensembleModel, as it's i-th element gives the extrapolation range for the
i-th element of ensembleModel.}
}
\value{
A matrix of weights of dimension Txm, where T=number of time steps
and m=number of models.  The (i,j) element of this matrix, then, is the
weight that the j-th model should receive at the i-th time step.
}
\description{
The default weights vector assumes that all models are valid for all
imputation points.  However, some imputations may be extrapolations that
are well outside the range of the data, and in this case not all models
will be valid.  Thus, this function takes the weights vector and adjusts it
for such observations.  This adjustment requires the ensembleModel to be a
list of lists.  Each list element should have the model function as well as
the "extrapolation range" of that function, i.e. how far it can be outside
the range of the data to be valid.  Values of Inf are acceptable.
}
\details{
Note that the extrapolation range was not a parameter in previous versions
of the code.  Thus, if that element is not present, the model assumes the
range is infinite.  This ensures backwards-compatibility.
}

